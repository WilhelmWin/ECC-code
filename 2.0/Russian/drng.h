// ========================================================================
//   Compiler Support for Hardware Instructions
// ========================================================================

// Определение, если компилятор поддерживает инструкцию rdrand (используется для
// генерации случайных чисел на аппаратном уровне)
#undef HAVE_RDRAND

// ========================================================================
//   Header Guard for DRNG (Цифровой генератор случайных чисел)
// ========================================================================

// Защита от повторного включения заголовочного файла (используется для предотвращения
// многократного включения одного и того же файла)
#ifndef __DRNG__H
#define __DRNG__H

// Подключение стандартных библиотек
#include <stdint.h> /* Включает стандартные типы данных (uint64_t, uint32_t и т.д.) */
#include <string.h> /* Для работы с функциями, связанными с копированием памяти, например memcpy */

// ========================================================================
//   RDRAND Retries
// ========================================================================

/* Рекомендуемое количество попыток для генерации случайных чисел с помощью RDRAND.
   Это значение основано на биномиальном распределении вероятности, что если
   генерация случайного числа не удалась, система будет пытаться повторить
   операцию до 10 раз. */

#define RDRAND_RETRIES 10

// ========================================================================
//   RDRAND Примитивы для генерации случайных чисел
// ========================================================================

/* Генерация 64-битного случайного числа с помощью инструкции RDRAND (только для 64-битных систем).
   Функция возвращает 0 при успешном завершении и ненулевое значение в случае ошибки. */

// Функция для получения одного 64-битного случайного числа
int rdrand64_step(uint64_t *rand);

// ========================================================================
//   Повторная генерация случайных чисел с использованием RDRAND
// ========================================================================

/* Попытка сгенерировать 64-битное случайное число с определённым количеством
   повторных попыток (только для 64-битных систем). Эта функция пытается
   сгенерировать случайное число и повторяет попытку до заданного числа попыток
   в случае неудачи. */

// Функция для повторных попыток получения случайного числа
int rdrand64_retry(unsigned int retries, uint64_t *rand);

// ========================================================================
//   Генерация нескольких байт с использованием RDRAND (только для 64-битных систем)
// ========================================================================

/* Генерация нескольких случайных байт с использованием инструкции RDRAND.
   Параметр 'n' определяет количество байт, которые нужно сгенерировать,
   а 'dest' — это массив, в который будут записаны случайные байты.
   Функция возвращает количество фактически сгенерированных байт. */

// Функция для генерации нескольких случайных байт
unsigned int rdrand_get_bytes(unsigned int n, unsigned char *dest);

#endif  /* __DRNG__H */
